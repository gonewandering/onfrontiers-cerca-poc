"""Initial migration with pgvector support

Revision ID: 14586b33f817
Revises: 
Create Date: 2025-08-03 20:35:39.615776

"""
from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision = '14586b33f817'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attribute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('depth', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.String(length=128), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['attribute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('attribute', schema=None) as batch_op:
        batch_op.create_index('ix_attribute_type', ['type'], unique=False)
        batch_op.create_index('ix_attribute_type_name', ['type', 'name'], unique=True)

    op.create_table('expert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experience',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expert_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['expert_id'], ['expert.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experience_attribute',
    sa.Column('experience_id', sa.Integer(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['attribute.id'], ),
    sa.ForeignKeyConstraint(['experience_id'], ['experience.id'], ),
    sa.PrimaryKeyConstraint('experience_id', 'attribute_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('experience_attribute')
    op.drop_table('experience')
    op.drop_table('expert')
    with op.batch_alter_table('attribute', schema=None) as batch_op:
        batch_op.drop_index('ix_attribute_type_name')
        batch_op.drop_index('ix_attribute_type')

    op.drop_table('attribute')
    # ### end Alembic commands ###
